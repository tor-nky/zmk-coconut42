/*
 * Copyright (c) 2024 Satoru NAKAYA
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/matrix_transform.h>

#include "layouts/6column.dtsi"
#include "layouts/5column.dtsi"

&coconut42_6col_layout {
    transform = <&default_transform>;
};

&coconut42_5col_layout {
    transform = <&five_column_transform>;
};

/ {
    chosen {
        zephyr,display = &oled;
        zmk,kscan = &kscan0;
        zmk,physical-layout = &coconut42_6col_layout;
    };

    default_transform: keymap_transform_0 {
        compatible = "zmk,matrix-transform";
        columns = <14>;
        rows = <11>;
        map = <
            RC(0,3) RC(1,3) RC(2,3) RC(4,3) RC(5,3) RC(6,3)   RC(13,10) RC(12,10) RC(11,10) RC(9,10)  RC(8,10) RC(7,10)
            RC(0,2) RC(1,2) RC(3,2) RC(4,2) RC(5,2) RC(6,2)   RC(13,9)  RC(12,9)  RC(11,9)  RC(10,9)  RC(8,9)  RC(7,9)
            RC(0,1) RC(2,1) RC(3,1) RC(4,1) RC(5,1) RC(6,1)   RC(13,8)  RC(12,8)  RC(11,8)  RC(10,8)  RC(9,8)  RC(7,8)
                                    RC(4,0) RC(5,0) RC(6,0)   RC(13,7)  RC(12,7)  RC(11,7)
        >;
    };

    five_column_transform: keymap_transform_1 {
        compatible = "zmk,matrix-transform";
        columns = <14>;
        rows = <11>;
        map = <
            RC(1,3) RC(2,3) RC(4,3) RC(5,3) RC(6,3)   RC(13,10) RC(12,10) RC(11,10) RC(9,10)  RC(8,10)
            RC(1,2) RC(3,2) RC(4,2) RC(5,2) RC(6,2)   RC(13,9)  RC(12,9)  RC(11,9)  RC(10,9)  RC(8,9)
            RC(2,1) RC(3,1) RC(4,1) RC(5,1) RC(6,1)   RC(13,8)  RC(12,8)  RC(11,8)  RC(10,8)  RC(9,8)
                            RC(4,0) RC(5,0) RC(6,0)   RC(13,7)  RC(12,7)  RC(11,7)
        >;
    };

    kscan0: kscan {
    };

    // TODO: per-key RGB node(s)?
};

&xiao_i2c {
    status = "okay";

    oled: ssd1306@3c {
        compatible = "solomon,ssd1306fb";
        reg = <0x3c>;
        width = <128>;
        height = <32>;
        segment-offset = <0>;
        page-offset = <0>;
        display-offset = <0>;
        multiplex-ratio = <31>;
        segment-remap;
        com-invdir;
        com-sequential;
        inversion-on;
        prechargep = <0x22>;
    };
};
